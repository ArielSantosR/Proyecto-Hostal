--Creación de Usuario

CREATE USER HOSTAL IDENTIFIED BY 123;
GRANT DBA TO HOSTAL;

--Creación de Tablas

CREATE TABLE USUARIO(
ID_USUARIO NUMBER(5),
NOMBRE_USUARIO VARCHAR2(25) NOT NULL UNIQUE,
PASSWORD VARCHAR2(255) NOT NULL,
TIPO_USUARIO VARCHAR2(25) NOT NULL,
ESTADO VARCHAR2(15) NOT NULL,
CONSTRAINT PK_USUARIO PRIMARY KEY(ID_USUARIO)
);

CREATE TABLE PAIS(
ID_PAIS NUMBER(5),
NOMBRE_PAIS VARCHAR2(50) NOT NULL,
CONSTRAINT PK_PAIS PRIMARY KEY(ID_PAIS)
);

CREATE TABLE REGION(
ID_REGION NUMBER(5),
NOMBRE_REGION VARCHAR2(50) NOT NULL,
ID_PAIS NUMBER(5) NOT NULL,
CONSTRAINT PK_REGION PRIMARY KEY(ID_REGION),
CONSTRAINT FK_REGION_PAIS FOREIGN KEY(ID_PAIS) REFERENCES PAIS(ID_PAIS)
);

CREATE TABLE COMUNA(
ID_COMUNA NUMBER(5),
NOMBRE_COMUNA VARCHAR2(50) NOT NULL,
ID_REGION NUMBER(5) NOT NULL,
CONSTRAINT PK_COMUNA PRIMARY KEY(ID_COMUNA),
CONSTRAINT FK_COMUNA_REGION FOREIGN KEY(ID_REGION) REFERENCES REGION(ID_REGION)
);

CREATE TABLE GIRO(
  ID_GIRO NUMBER(5) CONSTRAINT PK_GIRO PRIMARY KEY,
  NOMBRE_GIRO VARCHAR2(25) NOT NULL
);

CREATE TABLE CLIENTE(
RUT_CLIENTE NUMBER(8),
DV_CLIENTE VARCHAR2(1) NOT NULL,
DIRECCION_CLIENTE VARCHAR2(100) NOT NULL,
CORREO_CLIENTE VARCHAR2(50),
TELEFONO_CLIENTE NUMBER(12),
ID_COMUNA NUMBER(5) NOT NULL,
ID_USUARIO NUMBER(5) NOT NULL,
NOMBRE_CLIENTE VARCHAR2(100) NOT NULL,
ID_GIRO NUMBER(5) NOT NULL,
CONSTRAINT PK_CLIENTE PRIMARY KEY(RUT_CLIENTE),
CONSTRAINT FK_CLIENTE_COMUNA FOREIGN KEY(ID_COMUNA) REFERENCES COMUNA(ID_COMUNA),
CONSTRAINT FK_CLIENTE_USUARIO FOREIGN KEY(ID_USUARIO) REFERENCES USUARIO(ID_USUARIO),
CONSTRAINT FK_GIRO_CLIENTE FOREIGN KEY(ID_GIRO) REFERENCES GIRO(ID_GIRO)
);

CREATE TABLE TIPO_HABITACION(
ID_TIPO_HABITACION NUMBER(5),
NOMBRE_TIPO_HABITACION VARCHAR2(25) NOT NULL,
CANTIDAD_PASAJERO NUMBER(2) NOT NULL,
PRECIO_TIPO NUMBER(8) NOT NULL,
CONSTRAINT PK_TIPO_HABITACION PRIMARY KEY(ID_TIPO_HABITACION));

CREATE TABLE CATEGORIA_HABITACION(
ID_CATEGORIA_HABITACION NUMBER(3),
NOMBRE_CATEGORIA VARCHAR2(25) NOT NULL,
PRECIO_CATEGORIA NUMBER(8) NOT NULL,
CONSTRAINT PK_CATEGORIA_HABITACION PRIMARY KEY(ID_CATEGORIA_HABITACION)
);

CREATE TABLE HABITACION(
NUMERO_HABITACION NUMBER(5),
ESTADO_HABITACION VARCHAR2(50) NOT NULL,
ID_TIPO_HABITACION NUMBER(5) NOT NULL,
ID_CATEGORIA_HABITACION NUMBER(3) NOT NULL,
CONSTRAINT PK_HABITACION PRIMARY KEY(NUMERO_HABITACION),
CONSTRAINT FK_HABITACION_TIPO_HABITACION FOREIGN KEY(ID_TIPO_HABITACION) REFERENCES TIPO_HABITACION(ID_TIPO_HABITACION),
CONSTRAINT FK_HABITACION_CATEGORIA_HAB FOREIGN KEY(ID_CATEGORIA_HABITACION) REFERENCES CATEGORIA_HABITACION(ID_CATEGORIA_HABITACION)
);

CREATE TABLE PENSION(
ID_PENSION NUMBER(5),
NOMBRE_PENSION VARCHAR2(25) NOT NULL,
VALOR_PENSION NUMBER(10) NOT NULL,
NUMERO_HABITACION NUMBER(5),
CONSTRAINT PK_PENSION PRIMARY KEY(ID_PENSION),
CONSTRAINT FK_PENSION_HABITACION FOREIGN KEY(NUMERO_HABITACION) REFERENCES HABITACION(NUMERO_HABITACION)
);

CREATE TABLE TIPO_PLATO(
ID_TIPO_PLATO NUMBER(5),
NOMBRE_TIPO_PLATO VARCHAR2(50) NOT NULL,
CONSTRAINT PK_TIPO_PLATO PRIMARY KEY(ID_TIPO_PLATO)
);

CREATE TABLE CATEGORIA(
ID_CATEGORIA NUMBER(5),
NOMBRE_CATEGORIA VARCHAR2(50) NOT NULL,
CONSTRAINT PK_CATEGORIA PRIMARY KEY(ID_CATEGORIA)
);

CREATE TABLE PLATO(
ID_PLATO NUMBER (5), 
NOMBRE_PLATO VARCHAR2(50) NOT NULL,
PRECIO_PLATO NUMBER(10) NOT NULL,
ID_CATEGORIA NUMBER(5) NOT NULL,
ID_TIPO_PLATO NUMBER(5) NOT NULL,
CONSTRAINT PK_PLATO PRIMARY KEY(ID_PLATO),
CONSTRAINT FK_PLATO_CATEGORIA FOREIGN KEY(ID_CATEGORIA) REFERENCES CATEGORIA(ID_CATEGORIA),
CONSTRAINT FK_PLATO_TIPO_PLATO FOREIGN KEY(ID_TIPO_PLATO) REFERENCES TIPO_PLATO(ID_TIPO_PLATO)
);

CREATE TABLE DETALLE_PLATOS(
ID_DETALLE_PLATOS NUMBER(5),
CANTIDAD NUMBER(5) NOT NULL,
ID_PLATO NUMBER(5) NOT NULL,
ID_PENSION NUMBER(5) NOT NULL,
CONSTRAINT PK_DETALLE_PLATOS PRIMARY KEY(ID_DETALLE_PLATOS),
CONSTRAINT FK_DETALLE_PLATOS_PLATO FOREIGN KEY(ID_PLATO) REFERENCES PLATO(ID_PLATO),
CONSTRAINT FK_DETALLE_PLATOS_PENSION FOREIGN KEY(ID_PENSION) REFERENCES PENSION(ID_PENSION)
);

CREATE TABLE HUESPED(
RUT_HUESPED NUMBER(8),
DV_HUESPED VARCHAR2(1) NOT NULL,
PNOMBRE_HUESPED VARCHAR2(50) NOT NULL,
SNOMBRE_HUESPED VARCHAR2(50),
APP_PATERNO_HUESPED VARCHAR2(50) NOT NULL,
APP_MATERNO_HUESPED VARCHAR2(50) NOT NULL,
TELEFONO_HUESPED NUMBER(12),
REGISTRADO VARCHAR2(1) NOT NULL,
RUT_CLIENTE NUMBER(8) NOT NULL,
CONSTRAINT PK_HUESPED PRIMARY KEY(RUT_HUESPED),
CONSTRAINT FK_HUESPED_CLIENTE FOREIGN KEY(RUT_CLIENTE) REFERENCES CLIENTE(RUT_CLIENTE)
);

CREATE TABLE DETALLE_PASAJEROS(
  ID_DETALLE_PASAJEROS NUMBER(5) CONSTRAINT PK_DETALLE_PASAJEROS PRIMARY KEY,
  NUMERO_HABITACION NUMBER(5) NOT NULL,
  RUT_HUESPED NUMBER(8) NOT NULL,
  ID_PENSION NUMBER(5) NOT NULL,
  CONSTRAINT FK_HUESPED_DETALLE_P FOREIGN KEY(RUT_HUESPED) REFERENCES HUESPED(RUT_HUESPED),
  CONSTRAINT FK_HABITACION_DETALLE_P FOREIGN KEY(NUMERO_HABITACION) REFERENCES HABITACION(NUMERO_HABITACION),
  CONSTRAINT FK_DETALLE_PENSION_P FOREIGN KEY(ID_PENSION) REFERENCES PENSION(ID_PENSION)
);

CREATE TABLE DETALLE_HABITACION(
  ID_DETALLE_H NUMBER(5) CONSTRAINT PK_DETALLE_HABITACION PRIMARY KEY,
  FECHA_LLEGADA DATE NOT NULL,
  FECHA_SALIDA DATE NOT NULL,
  NUMERO_HABITACION NUMBER(5) NOT NULL,
  RUT_CLIENTE NUMBER(8) NOT NULL,
  CONSTRAINT FK_HABITACION_DETALLE_H FOREIGN KEY(NUMERO_HABITACION) REFERENCES HABITACION(NUMERO_HABITACION),
  CONSTRAINT FK_CLIENTE_DETALLE_H FOREIGN KEY(RUT_CLIENTE) REFERENCES CLIENTE(RUT_CLIENTE)
);

CREATE TABLE EMPLEADO(
RUT_EMPLEADO NUMBER(8),
DV_EMPLEADO VARCHAR2(1) NOT NULL,
PNOMBRE_EMPLEADO VARCHAR2(50) NOT NULL,
SNOMBRE_EMPLEADO VARCHAR2(50),
APP_PATERNO_EMPLEADO VARCHAR2(50) NOT NULL,
APP_MATERNO_EMPLEADO VARCHAR2(50) NOT NULL,
ID_USUARIO NUMBER(5) NOT NULL,
CONSTRAINT PK_EMPLEADO PRIMARY KEY(RUT_EMPLEADO),
CONSTRAINT FK_EMPLEADO_USUARIO FOREIGN KEY(ID_USUARIO) REFERENCES USUARIO(ID_USUARIO)
);

CREATE TABLE ORDEN_COMPRA(
NUMERO_ORDEN NUMBER(5),
CANTIDAD_HUESPEDES NUMBER(10) NOT NULL,
FECHA_LLEGADA DATE NOT NULL, 
FECHA_SALIDA DATE NOT NULL,
RUT_EMPLEADO NUMBER(8),
RUT_CLIENTE NUMBER(8),
ESTADO_ORDEN VARCHAR2(25) NOT NULL,
COMENTARIO VARCHAR2(256),
CONSTRAINT PK_ORDEN_COMPRA PRIMARY KEY(NUMERO_ORDEN),
CONSTRAINT FK_ORDEN_COMPRA_EMPLEADO FOREIGN KEY(RUT_EMPLEADO) REFERENCES EMPLEADO(RUT_EMPLEADO),
CONSTRAINT FK_ORDEN_COMPRA_CLIENTE FOREIGN KEY(RUT_CLIENTE) REFERENCES CLIENTE(RUT_CLIENTE)
);

CREATE TABLE DETALLE_ORDEN (
ID_DETALLE NUMBER(10),
NUMERO_ORDEN NUMBER(5) NOT NULL, 
RUT_HUESPED NUMBER(8) NOT NULL,
ID_CATEGORIA_HABITACION NUMBER(3) NOT NULL,
ID_PENSION NUMBER(5) NOT NULL,
CONSTRAINT PK_DETALLE_ORDEN PRIMARY KEY(ID_DETALLE),
CONSTRAINT FK_ORDEN_DETALLE_ORDEN FOREIGN KEY(NUMERO_ORDEN) REFERENCES ORDEN_COMPRA(NUMERO_ORDEN),
CONSTRAINT FK_HUESPED_DETALLE_ORDEN FOREIGN KEY(RUT_HUESPED) REFERENCES HUESPED(RUT_HUESPED),
CONSTRAINT FK_DETALLE_ORDEN_CATEGORIA FOREIGN KEY(ID_CATEGORIA_HABITACION) REFERENCES CATEGORIA_HABITACION(ID_CATEGORIA_HABITACION),
CONSTRAINT FK_DETALLE_ORDEN_PENSION FOREIGN KEY(ID_PENSION) REFERENCES PENSION(ID_PENSION)
);

CREATE TABLE BOLETA(
ID_BOLETA NUMBER(10),
VALOR_DESC_BOLETA NUMBER,
VALOR_TOTAL_BOLETA NUMBER(15) NOT NULL,
FECHA_EMISION_BOLETA DATE NOT NULL,
RUT_HUESPED NUMBER(8) NOT NULL,
RUT_EMPLEADO NUMBER(8) NOT NULL,
CONSTRAINT PK_BOLETA PRIMARY KEY(ID_BOLETA),
CONSTRAINT FK_BOLETA_EMPLEADO FOREIGN KEY(RUT_EMPLEADO) REFERENCES EMPLEADO(RUT_EMPLEADO),
CONSTRAINT FK_BOLETA_HUESPED FOREIGN KEY(RUT_HUESPED) REFERENCES HUESPED(RUT_HUESPED)
);

CREATE TABLE DETALLE_BOLETA(
ID_DETALLE_BOLETA NUMBER(10),
DESCRIPCION_DETALLE VARCHAR2(250) NOT NULL,
CANTIDAD NUMBER(10) NOT NULL,
VALOR_TOTAL NUMBER(10) NOT NULL,
ID_BOLETA NUMBER(10),
CONSTRAINT PK_DETALLE_BOLETA PRIMARY KEY(ID_DETALLE_BOLETA, ID_BOLETA),
CONSTRAINT FK_DETALLE_BOLETA_BOLETA FOREIGN KEY(ID_BOLETA) REFERENCES BOLETA(ID_BOLETA)
);

CREATE TABLE TIPO_PROVEEDOR(
ID_TIPO_PROVEEDOR NUMBER(5),
NOMBRE_TIPO VARCHAR2(50) NOT NULL,
CONSTRAINT PK_TIPO_PROVEEDOR PRIMARY KEY(ID_TIPO_PROVEEDOR)
);

CREATE TABLE PROVEEDOR(
RUT_PROVEEDOR NUMBER(8),
DV_PROVEEDOR VARCHAR2(1) NOT NULL,
PNOMBRE_PROVEEDOR VARCHAR2(50) NOT NULL,
SNOMBRE_PROVEEDOR VARCHAR2(50),
APP_PATERNO_PROVEEDOR VARCHAR2(50) NOT NULL,
APP_MATERNO_PROVEEDOR VARCHAR2(50) NOT NULL,
ID_TIPO_PROVEEDOR NUMBER(5) NOT NULL,
ID_USUARIO NUMBER(5) NOT NULL,
CONSTRAINT PK_PROVEEDOR PRIMARY KEY(RUT_PROVEEDOR),
CONSTRAINT FK_PROVEEDOR_TIPO_PROVEEDOR FOREIGN KEY(ID_TIPO_PROVEEDOR) REFERENCES TIPO_PROVEEDOR(ID_TIPO_PROVEEDOR),
CONSTRAINT FK_PROVEEDOR_USUARIO FOREIGN KEY(ID_USUARIO) REFERENCES USUARIO(ID_USUARIO)
);

CREATE TABLE FAMILIA(
ID_FAMILIA NUMBER(5),
NOMBRE_FAMILIA VARCHAR2(250) NOT NULL,
CONSTRAINT PK_FAMILIA PRIMARY KEY(ID_FAMILIA)
);

CREATE TABLE PRODUCTO(
ID_PRODUCTO NUMBER(19),
NOMBRE_PRODUCTO VARCHAR2(50) NOT NULL,
PRECIO_PRODUCTO NUMBER(10) NOT NULL,
FECHA_VENCIMIENTO_PRODUCTO DATE,
STOCK_PRODUCTO NUMBER(5) NOT NULL,
STOCK_CRITICO_PRODUCTO NUMBER(5) NOT NULL,
DESCRIPCION_PRODUCTO VARCHAR2(250) NOT NULL,
UNIDAD_MEDIDA VARCHAR2(25) NOT NULL,
ID_FAMILIA NUMBER(5) NOT NULL,
RUT_PROVEEDOR NUMBER(8) NOT NULL,
ID_PRODUCTO_SEQ NUMBER(5) NOT NULL,
CONSTRAINT PK_PRODUCTO PRIMARY KEY(ID_PRODUCTO),
CONSTRAINT FK_PRODUCTO_FAMILIA FOREIGN KEY(ID_FAMILIA) REFERENCES FAMILIA(ID_FAMILIA),
CONSTRAINT FK_PRODUCTO_PROVEEDOR FOREIGN KEY(RUT_PROVEEDOR) REFERENCES PROVEEDOR(RUT_PROVEEDOR)
);

CREATE TABLE RECEPCION(
NUMERO_RECEPCION NUMBER(5),
FECHA_RECEPCION DATE NOT NULL,
RUT_PROVEEDOR NUMBER(8) NOT NULL,
RUT_EMPLEADO NUMBER(8) NOT NULL,
CONSTRAINT PK_RECEPCION PRIMARY KEY(NUMERO_RECEPCION),
CONSTRAINT FK_RECEPCION_PROVEEDOR FOREIGN KEY(RUT_PROVEEDOR) REFERENCES PROVEEDOR(RUT_PROVEEDOR),
CONSTRAINT FK_RECEPCION_EMPLEADO FOREIGN KEY(RUT_EMPLEADO) REFERENCES EMPLEADO(RUT_EMPLEADO) 
);

CREATE TABLE DETALLE_RECEPCION(
ID_DETALLE_RECEPCION NUMBER(5),
CANTIDAD NUMBER(10) NOT NULL,
ID_PRODUCTO NUMBER(19) NOT NULL,
NUMERO_RECEPCION NUMBER(5),
CONSTRAINT PK_DETALLE_RECEPCION PRIMARY KEY(ID_DETALLE_RECEPCION, NUMERO_RECEPCION),
CONSTRAINT FK_DETALLE_RECEPCION_PRODUCTO FOREIGN KEY(ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO),
CONSTRAINT FK_DETALLE_RECEPCION_RECEPCION FOREIGN KEY(NUMERO_RECEPCION) REFERENCES RECEPCION(NUMERO_RECEPCION)
);


CREATE TABLE PEDIDO(
NUMERO_PEDIDO NUMBER(5),
FECHA_PEDIDO DATE NOT NULL, 
ESTADO_PEDIDO VARCHAR2(25) NOT NULL,
RUT_EMPLEADO NUMBER(8) NOT NULL,
NUMERO_RECEPCION NUMBER(5),
RUT_PROVEEDOR NUMBER(8) NOT NULL,
ESTADO_DESPACHO VARCHAR2(25) NOT NULL,
COMENTARIO VARCHAR2(256),
CONSTRAINT PK_PEDIDO PRIMARY KEY(NUMERO_PEDIDO),
CONSTRAINT FK_PEDIDO_EMPLEADO FOREIGN KEY(RUT_EMPLEADO) REFERENCES EMPLEADO(RUT_EMPLEADO),
CONSTRAINT FK_PEDIDO_PROVEEDOR FOREIGN KEY(RUT_PROVEEDOR) REFERENCES PROVEEDOR(RUT_PROVEEDOR),
CONSTRAINT FK_PEDIDO_RECEPCION FOREIGN KEY(NUMERO_RECEPCION) REFERENCES RECEPCION(NUMERO_RECEPCION)
);

CREATE TABLE DETALLE_PEDIDO(
ID_DETALLE_PEDIDO NUMBER(5),
CANTIDAD NUMBER(10) NOT NULL,
NUMERO_PEDIDO NUMBER(5),
ID_PRODUCTO NUMBER(19) NOT NULL,
CONSTRAINT PK_DETALLE_PEDIDO PRIMARY KEY(ID_DETALLE_PEDIDO, ID_PRODUCTO),
CONSTRAINT FK_DETALLE_PEDIDO_PEDIDO FOREIGN KEY(NUMERO_PEDIDO) REFERENCES PEDIDO(NUMERO_PEDIDO),
CONSTRAINT FK_DETALLE_PEDIDO_PRODUCTO FOREIGN KEY(ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO)
);


CREATE TABLE FACTURA(
ID_FACTURA NUMBER(10),
VALOR_NETO_FACTURA NUMBER(15) NOT NULL,
VALOR_IVA_FACTURA NUMBER(15) NOT NULL,
VALOR_DESC_FACTURA NUMBER,
VALOR_TOTAL_FACTURA NUMBER(15) NOT NULL,
FECHA_EMISION_FACTURA DATE NOT NULL,
RUT_CLIENTE NUMBER(8) NOT NULL,
RUT_EMPLEADO NUMBER(8) NOT NULL,
CONSTRAINT PK_FACTURA PRIMARY KEY(ID_FACTURA),
CONSTRAINT FK_FACTURA_CLIENTE FOREIGN KEY(RUT_CLIENTE) REFERENCES CLIENTE(RUT_CLIENTE),
CONSTRAINT FK_FACTURA_EMPLEADO FOREIGN KEY(RUT_EMPLEADO) REFERENCES EMPLEADO(RUT_EMPLEADO)
);

CREATE TABLE DETALLE_FACTURA(
ID_DETALLE_FACTURA NUMBER(10),
DESCRIPCION_DETALLE VARCHAR2(250) NOT NULL,
CANTIDAD NUMBER(10) NOT NULL,
VALOR_TOTAL NUMBER(15) NOT NULL,
ID_FACTURA NUMBER(10) NOT NULL,
RUT_CLIENTE NUMBER(8) NOT NULL,
CONSTRAINT PK_DETALLE_FACTURA PRIMARY KEY(ID_DETALLE_FACTURA),
CONSTRAINT FK_DETALLE_FACTURA_FACTURA FOREIGN KEY(ID_FACTURA) REFERENCES FACTURA(ID_FACTURA),
CONSTRAINT FK_DETALLE_FACTURA_CLIENTE FOREIGN KEY(RUT_CLIENTE) REFERENCES CLIENTE(RUT_CLIENTE)
);

CREATE TABLE LOG_ERRORES(
ID_ERROR NUMBER(10) CONSTRAINT PK_LOG_ERRORES PRIMARY KEY,
NUMERO_ERROR VARCHAR2(250) NOT NULL,
MENSAJE VARCHAR(250) NOT NULL
);

CREATE TABLE NOTIFICACION (
ID_NOTIFICACION NUMBER(10),
MENSAJE VARCHAR2(250) NOT NULL,
URL VARCHAR2(50) NOT NULL,
ID_USUARIO NUMBER(5) NOT NULL,
NUMERO_PEDIDO NUMBER(5),
ID_PRODUCTO NUMBER(19),
NUMERO_ORDEN NUMBER(5),
ESTADO_NOTIFICACION VARCHAR2(25) NOT NULL,
CONSTRAINT PK_NOTIFICACION PRIMARY KEY(ID_NOTIFICACION),
CONSTRAINT FK_NOTIFICACION_USUARIO FOREIGN KEY(ID_USUARIO) REFERENCES USUARIO(ID_USUARIO),
CONSTRAINT FK_NOTIFICACION_PEDIDO FOREIGN KEY(NUMERO_PEDIDO) REFERENCES PEDIDO(NUMERO_PEDIDO),
CONSTRAINT FK_NOTIFICACION_PRODUCTO FOREIGN KEY(ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO),
CONSTRAINT FK_NOTIFICACION_ORDEN FOREIGN KEY(NUMERO_ORDEN) REFERENCES ORDEN_COMPRA(NUMERO_ORDEN)
);

--Creación de Secuencias

CREATE SEQUENCE seq_usuario
MINVALUE 1
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE seq_plato
MINVALUE 1
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE seq_producto
MINVALUE 1
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE seq_tipo_proveedor
MINVALUE 1
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE seq_pedido
MINVALUE 1
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE SEQ_DETALLE_PEDIDO
MINVALUE 1
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE seq_categoria
MINVALUE 1
START WITH 4
INCREMENT BY 1;

CREATE SEQUENCE seq_pais
MINVALUE 1
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE seq_region
MINVALUE 1
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE seq_comuna
MINVALUE 1
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE seq_notificacion
MINVALUE 1
START WITH 1
INCREMENT BY 1;

--Creación de Secuencia Recepción
CREATE SEQUENCE seq_recepcion
MINVALUE 1
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE seq_detalle_recepcion
MINVALUE 1
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE seq_orden_compra
MINVALUE 1
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE seq_detalle_orden
MINVALUE 1
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE SEQ_MINUTA
MINVALUE 1
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE SEQ_DETALLE_MINUTA
MINVALUE 1
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE SEQ_RESERVA
MINVALUE 1
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE SEQ_DETALLE_RESERVA
MINVALUE 1
START WITH 1
INCREMENT BY 1;

--Creación Función Código Producto

CREATE OR REPLACE FUNCTION FN_PRODUCTO (P_ID_PROVEEDOR IN PRODUCTO.RUT_PROVEEDOR%TYPE,
										P_ID_FAMILIA IN PRODUCTO.ID_FAMILIA%TYPE,
                    P_FECHA_VENCIMIENTO IN PRODUCTO.FECHA_VENCIMIENTO_PRODUCTO%TYPE,
                    P_ID_PRODUCTO_S IN PRODUCTO.ID_PRODUCTO_SEQ%TYPE)
RETURN NUMERIC
IS
V_ID_PRODUCTO NUMERIC:= 0;

BEGIN 

SELECT CONCAT(CONCAT(CONCAT(SUBSTR(P_ID_PROVEEDOR, 1, 3),
	  LPAD(P_ID_FAMILIA, 3, 0)),
    NVL(CONCAT(CONCAT(SUBSTR(P_FECHA_VENCIMIENTO, 1, 2), SUBSTR(P_FECHA_VENCIMIENTO, 4, 2)), SUBSTR(TO_CHAR(P_FECHA_VENCIMIENTO, 'DD/MM/YYYY'), 7, 4)), LPAD(0, '8', 0))),
    LPAD(P_ID_PRODUCTO_S, 3, 0))

	INTO V_ID_PRODUCTO
	FROM DUAL;

RETURN V_ID_PRODUCTO;

EXCEPTION 
WHEN OTHERS THEN 
V_ID_PRODUCTO:= 0;
RETURN V_ID_PRODUCTO;

END FN_PRODUCTO;

/
--Creación de TRIGGER

create or replace TRIGGER TGR_USUARIO
BEFORE INSERT ON USUARIO
FOR EACH ROW
 WHEN (new.ID_USUARIO IS NULL or new.ID_USUARIO = 0)
BEGIN
  SELECT SEQ_USUARIO.NEXTVAL 
  INTO :new.ID_USUARIO
  FROM dual;
END;

/

CREATE OR REPLACE TRIGGER TGR_CLIENTE
BEFORE INSERT ON CLIENTE
FOR EACH ROW
 WHEN (new.ID_USUARIO IS NULL or new.ID_USUARIO = 0) BEGIN
  SELECT SEQ_USUARIO.CURRVAL 
  INTO :new.ID_USUARIO
  FROM dual;
END;

/

CREATE OR REPLACE TRIGGER TGR_EMPLEADO
BEFORE INSERT ON EMPLEADO
FOR EACH ROW
 WHEN (new.ID_USUARIO IS NULL or new.ID_USUARIO = 0) 
BEGIN
  SELECT SEQ_USUARIO.CURRVAL 
  INTO :new.ID_USUARIO
  FROM dual;
END;

/

CREATE OR REPLACE TRIGGER TGR_PROVEEDOR
BEFORE INSERT ON PROVEEDOR
FOR EACH ROW
 WHEN (new.ID_USUARIO IS NULL or new.ID_USUARIO = 0) 
BEGIN
  SELECT SEQ_USUARIO.CURRVAL 
  INTO :new.ID_USUARIO
  FROM dual;
END;

/

CREATE OR REPLACE TRIGGER TGR_PLATO
BEFORE INSERT ON PLATO
FOR EACH ROW
 WHEN (new.ID_PLATO IS NULL or new.ID_PLATO = 0) 
BEGIN
  SELECT SEQ_PLATO.NEXTVAL
  INTO :new.ID_PLATO
  FROM dual;
END;

/

CREATE OR REPLACE TRIGGER TGR_PRODUCTO
FOR INSERT ON PRODUCTO
COMPOUND TRIGGER
   -- Declarative Section (optional)
   -- Variables declared here have firing-statement duration.
   V_ID_PRODUCTO NUMBER;
     
     --Executed before DML statement
     BEFORE STATEMENT IS
     BEGIN
       NULL;
     END BEFORE STATEMENT;
   
     --Executed before each row change- :NEW, :OLD are available
     BEFORE EACH ROW IS
     BEGIN
        IF (TO_CHAR(TO_DATE(:NEW.FECHA_VENCIMIENTO_PRODUCTO), 'DD/MM/YYYY') = TO_CHAR(TO_DATE('01/01/2000'), 'DD/MM/YYYY')) THEN
            SELECT NULL
            INTO :new.FECHA_VENCIMIENTO_PRODUCTO
            FROM dual;
        END IF;
        
        SELECT 0
        INTO :NEW.ID_PRODUCTO
        FROM DUAL;
        
        SELECT SEQ_PRODUCTO.NEXTVAL
        INTO :NEW.ID_PRODUCTO_SEQ
        FROM DUAL;
        
        V_ID_PRODUCTO:= FN_PRODUCTO(:NEW.RUT_PROVEEDOR,  :NEW.ID_FAMILIA, :NEW.FECHA_VENCIMIENTO_PRODUCTO, :NEW.ID_PRODUCTO_SEQ);
  
        SELECT V_ID_PRODUCTO
        INTO :NEW.ID_PRODUCTO
        FROM DUAL;
        
     END BEFORE EACH ROW;
   
     --Executed aftereach row change- :NEW, :OLD are available
     AFTER EACH ROW IS
     BEGIN
       NULL;
     END AFTER EACH ROW;
   
     --Executed after DML statement
     AFTER STATEMENT IS
     BEGIN
        NULL;
     END AFTER STATEMENT;

END TGR_PRODUCTO;

/

--Creación Trigger Pedido

create or replace TRIGGER TGR_PEDIDO
BEFORE INSERT ON PEDIDO
FOR EACH ROW
 WHEN (new.NUMERO_PEDIDO IS NULL or new.NUMERO_PEDIDO = 0) 
BEGIN
  SELECT seq_pedido.NEXTVAL
  INTO :new.NUMERO_PEDIDO
  FROM dual;
END;

/

--Creación Trigger Detalle Pedido

create or replace TRIGGER TGR_DETALLE_PEDIDO
BEFORE INSERT ON DETALLE_PEDIDO
FOR EACH ROW
 WHEN (new.NUMERO_PEDIDO IS NULL or new.NUMERO_PEDIDO = 0) 
BEGIN
  SELECT seq_pedido.CURRVAL
  INTO :new.NUMERO_PEDIDO
  FROM dual;

  SELECT seq_detalle_pedido.NEXTVAL
  INTO :new.ID_DETALLE_PEDIDO
  FROM dual;
END;

/

create or replace TRIGGER TGR_CATEGORIA
BEFORE INSERT ON CATEGORIA
FOR EACH ROW
 WHEN (new.ID_CATEGORIA IS NULL or new.ID_CATEGORIA = 0) 
BEGIN
  SELECT seq_categoria.NEXTVAL
  INTO :new.ID_CATEGORIA
  FROM dual;
END;

/

create or replace TRIGGER TGR_PAIS
BEFORE INSERT ON PAIS
FOR EACH ROW
 WHEN (new.ID_PAIS IS NULL or new.ID_PAIS = 0) 
BEGIN
  SELECT seq_pais.NEXTVAL
  INTO :new.ID_PAIS
  FROM dual;
END;

/


create or replace TRIGGER TGR_RECEPCION
BEFORE INSERT ON RECEPCION
FOR EACH ROW
 WHEN (new.NUMERO_RECEPCION IS NULL or new.NUMERO_RECEPCION = 0) 
BEGIN
  SELECT seq_recepcion.NEXTVAL
  INTO :new.NUMERO_RECEPCION
  FROM dual;
END;

/

--Creación Trigger Detalle Pedido

create or replace TRIGGER TGR_DETALLE_RECEPCION
BEFORE INSERT ON DETALLE_RECEPCION
FOR EACH ROW
 WHEN (new.NUMERO_RECEPCION IS NULL or new.NUMERO_RECEPCION = 0) 
 DECLARE 
BEGIN
  SELECT seq_recepcion.CURRVAL
  INTO :new.NUMERO_RECEPCION
  FROM dual;

  SELECT seq_detalle_recepcion.NEXTVAL
  INTO :new.ID_DETALLE_RECEPCION
  FROM dual;
END;

/

--Insert de Notificacion: INSERT INTO NOTIFICACION(ID_NOTIFICACION, MENSAJE, ID_USUARIO, ESTADO_NOTIFICACION, URL, NUMERO_PEDIDO, ID_PRODUCTO, NUMERO_ORDEN) VALUES();
--Este Trigger envía una notificación al proveedor si ha recibido un nuevo pedido.
CREATE OR REPLACE TRIGGER TGR_NOTIFICACION_PROVEEDOR
AFTER UPDATE ON PEDIDO
FOR EACH ROW
DECLARE
CURSOR CUR_PROVEEDOR IS SELECT RUT_PROVEEDOR, ID_USUARIO FROM PROVEEDOR;

BEGIN
  IF UPDATING('ESTADO_PEDIDO') THEN
    IF :NEW.ESTADO_PEDIDO = 'Aceptado' THEN
        FOR I IN CUR_PROVEEDOR LOOP
            IF I.RUT_PROVEEDOR = :NEW.RUT_PROVEEDOR THEN
              INSERT INTO NOTIFICACION(ID_NOTIFICACION, MENSAJE, ID_USUARIO, ESTADO_NOTIFICACION, URL, NUMERO_PEDIDO)
              VALUES(SEQ_NOTIFICACION.NEXTVAL, 'Ha Recibido un nuevo Pedido, su número de Pedido es ' || :new.NUMERO_PEDIDO, I.ID_USUARIO, 'Habilitado', '../Proveedor/WebPedidosRecibidos.aspx', :NEW.NUMERO_PEDIDO);
            END IF;
        END LOOP;
    END IF;
  END IF;

  IF UPDATING('ESTADO_DESPACHO') THEN
    IF :NEW.ESTADO_DESPACHO = 'Aceptado' THEN
        FOR I IN CUR_PROVEEDOR LOOP
            IF I.RUT_PROVEEDOR = :NEW.RUT_PROVEEDOR THEN
                INSERT INTO NOTIFICACION(ID_NOTIFICACION, MENSAJE, ID_USUARIO, ESTADO_NOTIFICACION, URL, NUMERO_PEDIDO)
                VALUES(SEQ_NOTIFICACION.NEXTVAL, 'Tiene que despachar el Pedido ' || :new.NUMERO_PEDIDO, I.ID_USUARIO, 'Habilitado', '../Proveedor/WebHistorialPedidos.aspx', :NEW.NUMERO_PEDIDO);
            END IF;
        END LOOP;
    END IF;
  END IF;
END;

/

--Este Trigger Desactiva la notificacion del Proveedor segun su rut y a su vez envia una notificacion de pedidos sin despachar
CREATE OR REPLACE TRIGGER TGR_D_NOTIFICACION_PROVEEDOR
AFTER UPDATE ON PEDIDO
FOR EACH ROW
DECLARE
CURSOR CUR_PROVEEDOR IS SELECT RUT_PROVEEDOR, ID_USUARIO FROM PROVEEDOR WHERE :NEW.RUT_PROVEEDOR = RUT_PROVEEDOR;

BEGIN
	IF UPDATING('ESTADO_DESPACHO') THEN
    IF :NEW.ESTADO_DESPACHO != 'Pendiente' AND :NEW.ESTADO_DESPACHO != 'Despachado' THEN
      FOR I IN CUR_PROVEEDOR LOOP
          UPDATE NOTIFICACION
          SET ESTADO_NOTIFICACION = 'Deshabilitado'
          WHERE ID_USUARIO = I.ID_USUARIO AND NUMERO_PEDIDO = :NEW.NUMERO_PEDIDO;
      END LOOP;
    END IF;

    IF :NEW.ESTADO_DESPACHO = 'Despachado' THEN
      FOR I IN CUR_PROVEEDOR LOOP
          UPDATE NOTIFICACION
          SET ESTADO_NOTIFICACION = 'Deshabilitado'
          WHERE ID_USUARIO = I.ID_USUARIO AND NUMERO_PEDIDO = :NEW.NUMERO_PEDIDO;
      END LOOP;
    END IF;
  END IF;
END;

/

--Este Trigger es para avisar a cada Empleado que sus pedidos ya han sido despachados, las desactiva si las recepciona o las rechaza
CREATE OR REPLACE TRIGGER TGR_NOTIFICACION_EMPLEADO
AFTER UPDATE ON PEDIDO
FOR EACH ROW
DECLARE
CURSOR CUR_USUARIO IS SELECT ID_USUARIO, TIPO_USUARIO FROM USUARIO WHERE TIPO_USUARIO = 'Empleado' or TIPO_USUARIO = 'Administrador';

BEGIN
  IF UPDATING('ESTADO_PEDIDO') THEN
    IF :NEW.ESTADO_PEDIDO = 'Recepcionado' OR :NEW.ESTADO_PEDIDO = 'No Recepcionado' THEN
      FOR I IN CUR_USUARIO LOOP
        UPDATE NOTIFICACION
        SET ESTADO_NOTIFICACION = 'Deshabilitado'
        WHERE ID_USUARIO = I.ID_USUARIO AND NUMERO_PEDIDO = :NEW.NUMERO_PEDIDO;
      END LOOP;
    END IF;
  END IF;

  IF UPDATING('ESTADO_DESPACHO') THEN 
    IF :NEW.ESTADO_DESPACHO = 'Despachado' THEN
        FOR I IN CUR_USUARIO LOOP
            INSERT INTO NOTIFICACION(ID_NOTIFICACION, MENSAJE, ID_USUARIO, ESTADO_NOTIFICACION, URL, NUMERO_PEDIDO)
            VALUES(SEQ_NOTIFICACION.NEXTVAL, 'La orden de Pedido ' || :new.NUMERO_PEDIDO || ' ha sido despachada, debe hacer su recepción', I.ID_USUARIO, 'Habilitado', '../Empleado/WebRecibirPedido.aspx', :NEW.NUMERO_PEDIDO); 
        END LOOP;
    END IF;
  END IF;
END;

/

--Este Trigger es para avisar a cada Empleado que un producto tiene stock crítico y las desactiva en caso contrario.
CREATE OR REPLACE TRIGGER TGR_NOTIFICACION_EMPLEADO_PROD
AFTER UPDATE ON PRODUCTO
FOR EACH ROW
DECLARE
CURSOR CUR_USUARIO IS SELECT ID_USUARIO, TIPO_USUARIO FROM USUARIO WHERE TIPO_USUARIO = 'Empleado' or TIPO_USUARIO = 'Administrador';

BEGIN
  IF UPDATING('STOCK_PRODUCTO') THEN
    IF :NEW.STOCK_PRODUCTO <= :NEW.STOCK_CRITICO_PRODUCTO THEN
      FOR I IN CUR_USUARIO LOOP
        INSERT INTO NOTIFICACION(ID_NOTIFICACION, MENSAJE, ID_USUARIO, ESTADO_NOTIFICACION, URL, ID_PRODUCTO)
        VALUES(SEQ_NOTIFICACION.NEXTVAL, 'El Producto ' || :NEW.NOMBRE_PRODUCTO || ' Con ID ' || :NEW.ID_PRODUCTO || ' Está por agotarse', I.ID_USUARIO, 'Habilitado', '../Empleado/WebVerProductos.aspx', :NEW.ID_PRODUCTO);
      END LOOP;
    END IF;
  END IF;

  IF UPDATING('STOCK_PRODUCTO') THEN
    IF :NEW.STOCK_PRODUCTO > :NEW.STOCK_CRITICO_PRODUCTO THEN
      FOR I IN CUR_USUARIO LOOP
        UPDATE NOTIFICACION
        SET ESTADO_NOTIFICACION = 'Deshabilitado'
        WHERE ID_USUARIO = I.ID_USUARIO AND ID_PRODUCTO = :NEW.ID_PRODUCTO;
      END LOOP;
    END IF;
  END IF;
END;

/

--Este Trigger envía una notificación a cada uno de los administrador si hay nuevos pedidos pendientes.
CREATE OR REPLACE TRIGGER TGR_NOTIFICACION_ADMIN
AFTER INSERT ON PEDIDO
FOR EACH ROW
DECLARE
CURSOR CUR_USUARIO IS SELECT ID_USUARIO, TIPO_USUARIO FROM USUARIO WHERE TIPO_USUARIO = 'Administrador';

BEGIN
	FOR I IN CUR_USUARIO LOOP
		IF I.TIPO_USUARIO = 'Administrador' THEN
      INSERT INTO NOTIFICACION(ID_NOTIFICACION, MENSAJE, ID_USUARIO, ESTADO_NOTIFICACION, URL, NUMERO_PEDIDO)
      VALUES(SEQ_NOTIFICACION.NEXTVAL, 'El Pedido ' || :new.numero_pedido || ' está pendiente, revise los Pedidos Pendientes', I.ID_USUARIO, 'Habilitado', '../Administrador/WebVerPedido.aspx', :NEW.NUMERO_PEDIDO);
		END IF;
	END LOOP;
END;

/

CREATE OR REPLACE TRIGGER TGR_D_NOTIFICACION_ADMIN
AFTER UPDATE OR DELETE ON PEDIDO
FOR EACH ROW
DECLARE
CURSOR CUR_USUARIO IS SELECT ID_USUARIO, TIPO_USUARIO FROM USUARIO WHERE TIPO_USUARIO = 'Administrador';

BEGIN
	IF UPDATING('ESTADO_PEDIDO') THEN
    IF :NEW.ESTADO_PEDIDO != 'Pendiente' THEN
          FOR I IN CUR_USUARIO LOOP
            UPDATE NOTIFICACION
            SET ESTADO_NOTIFICACION = 'Deshabilitado'
            WHERE ID_USUARIO = I.ID_USUARIO AND NUMERO_PEDIDO = :NEW.NUMERO_PEDIDO;
          END LOOP;
    END IF;
  
  ELSIF DELETING THEN
    FOR I IN CUR_USUARIO LOOP
      UPDATE NOTIFICACION 
      SET ESTADO_NOTIFICACION = 'Deshabilitado'
      WHERE ID_USUARIO = I.ID_USUARIO AND NUMERO_PEDIDO = :OLD.NUMERO_PEDIDO;
    END LOOP;
  END IF;
END;

/

create or replace TRIGGER TGR_DETALLE_PEDIDO2
BEFORE INSERT ON DETALLE_PEDIDO
FOR EACH ROW
 WHEN (new.ID_DETALLE_PEDIDO IS NULL or new.ID_DETALLE_PEDIDO = 0) 
BEGIN
  SELECT seq_detalle_pedido.NEXTVAL
  INTO :new.ID_DETALLE_PEDIDO
  FROM dual;
END;

/

/

CREATE OR REPLACE TRIGGER TGR_ORDEN_COMPRA
BEFORE INSERT ON ORDEN_COMPRA
FOR EACH ROW
 WHEN (new.NUMERO_ORDEN IS NULL or new.NUMERO_ORDEN = 0) 
BEGIN
  SELECT seq_orden_compra.NEXTVAL
  INTO :new.NUMERO_ORDEN
  FROM dual;
END;

/

CREATE OR REPLACE TRIGGER TGR_DETALLE_ORDEN
BEFORE INSERT ON DETALLE_ORDEN
FOR EACH ROW
 WHEN (new.NUMERO_ORDEN IS NULL or new.NUMERO_ORDEN = 0) 
 DECLARE 
BEGIN
  SELECT seq_orden_compra.CURRVAL
  INTO :new.NUMERO_ORDEN
  FROM dual;

  SELECT seq_detalle_orden.NEXTVAL
  INTO :new.ID_DETALLE
  FROM dual;
END;

/

CREATE OR REPLACE TRIGGER TGR_STOCK_PRODUCTO
AFTER UPDATE ON PEDIDO
FOR EACH ROW
DECLARE
CURSOR CUR_DETALLE IS SELECT ID_PRODUCTO, CANTIDAD FROM DETALLE_PEDIDO WHERE NUMERO_PEDIDO = :NEW.NUMERO_PEDIDO;

BEGIN
	IF UPDATING('ESTADO_PEDIDO') THEN
    IF :NEW.ESTADO_PEDIDO = 'Recepcionado' THEN
          FOR I IN CUR_DETALLE LOOP
            UPDATE PRODUCTO
            SET STOCK_PRODUCTO = STOCK_PRODUCTO + I.CANTIDAD
            WHERE ID_PRODUCTO = I.ID_PRODUCTO;
          END LOOP;
    END IF;
  END IF;
END;

/

create or replace TRIGGER TGR_MINUTA
BEFORE INSERT ON PENSION
FOR EACH ROW
 WHEN (new.ID_PENSION IS NULL or new.ID_PENSION = 0) 
BEGIN
  SELECT SEQ_MINUTA.NEXTVAL
  INTO :new.ID_PENSION
  FROM dual;
END;

/

create or replace TRIGGER TGR_DETALLE_MINUTA
BEFORE INSERT ON DETALLE_PLATOS
FOR EACH ROW
 WHEN (new.ID_PENSION IS NULL or new.ID_PENSION = 0) 
BEGIN
  SELECT SEQ_MINUTA.CURRVAL
  INTO :new.ID_PENSION
  FROM dual;

  SELECT SEQ_DETALLE_MINUTA.NEXTVAL
  INTO :new.ID_DETALLE_PLATOS
  FROM dual;
END;

/

create or replace TRIGGER TGR_ORDEN_COMPRA
BEFORE INSERT ON ORDEN_COMPRA
FOR EACH ROW
 WHEN (new.NUMERO_ORDEN IS NULL or new.NUMERO_ORDEN = 0) 
BEGIN
  SELECT SEQ_RESERVA.NEXTVAL
  INTO :new.NUMERO_ORDEN
  FROM dual;
END;

/
--Creación Trigger Detalle Pedido

create or replace TRIGGER TGR_DETALLE_ORDEN
BEFORE INSERT ON DETALLE_ORDEN
FOR EACH ROW
 WHEN (new.NUMERO_ORDEN IS NULL or new.NUMERO_ORDEN = 0) 
BEGIN
  SELECT SEQ_RESERVA.CURRVAL
  INTO :new.NUMERO_ORDEN
  FROM dual;

  SELECT SEQ_DETALLE_RESERVA.NEXTVAL
  INTO :new.ID_DETALLE
  FROM dual;
END;

/
--Notificación Orden de Compra
CREATE OR REPLACE TRIGGER TGR_NOTIFICACION_EMPLEADO_RES
AFTER INSERT ON ORDEN_COMPRA
FOR EACH ROW
DECLARE
CURSOR CUR_USUARIO IS SELECT ID_USUARIO, TIPO_USUARIO FROM USUARIO WHERE TIPO_USUARIO = 'Empleado' or TIPO_USUARIO = 'Administrador';

BEGIN
  FOR I IN CUR_USUARIO LOOP
    INSERT INTO NOTIFICACION(ID_NOTIFICACION, MENSAJE, ID_USUARIO, ESTADO_NOTIFICACION, URL, NUMERO_ORDEN)
    VALUES(SEQ_NOTIFICACION.NEXTVAL, 'La Reserva ' || :new.NUMERO_ORDEN || ' está pendiente, revise los reservas Pendientes', I.ID_USUARIO, 'Habilitado', '../Empleado/WebReservasPendientes.aspx', :NEW.NUMERO_ORDEN);
	END LOOP;
END;

/

--Desactiva notificacion de compra
CREATE OR REPLACE TRIGGER TGR_D_NOTIFICACION_EMPLEADO_R
AFTER UPDATE OR DELETE ON ORDEN_COMPRA
FOR EACH ROW
DECLARE
CURSOR CUR_USUARIO IS SELECT ID_USUARIO, TIPO_USUARIO FROM USUARIO WHERE TIPO_USUARIO = 'Administrador' OR TIPO_USUARIO = 'Empleado';

BEGIN
	IF UPDATING('ESTADO_ORDEN') THEN
    IF :NEW.ESTADO_ORDEN != 'Pendiente' THEN
          FOR I IN CUR_USUARIO LOOP
            UPDATE NOTIFICACION
            SET ESTADO_NOTIFICACION = 'Deshabilitado'
            WHERE ID_USUARIO = I.ID_USUARIO AND NUMERO_ORDEN = :NEW.NUMERO_ORDEN;
          END LOOP;
    END IF;
  
  ELSIF DELETING THEN
    FOR I IN CUR_USUARIO LOOP
      UPDATE NOTIFICACION 
      SET ESTADO_NOTIFICACION = 'Deshabilitado'
      WHERE ID_USUARIO = I.ID_USUARIO AND NUMERO_ORDEN = :OLD.NUMERO_ORDEN;
    END LOOP;
  END IF;
END;

--Inserción de Usuarios
--Contraseña: admin
INSERT INTO USUARIO values (null, 'Admin', '$2a$12$i4fY7wI7DtcJRVeHOitdn.0nuEebwCfoqNtx49sBIxuzXNYQUujIS', 'Administrador', 'Habilitado');
INSERT INTO EMPLEADO VALUES (18882607, '5', 'Juan', 'Patricio', 'Travol', 'Caceres', 1);

--Inserción de datos dirección

--País
INSERT INTO PAIS VALUES (1, 'Chile');

--REGIONES
INSERT INTO REGION VALUES(1,'REGIÓN DE ARICA Y PARINACOTA', 1);
INSERT INTO REGION VALUES(2,'REGIÓN DE TARAPACÁ', 1);
INSERT INTO REGION VALUES(3,'REGIÓN DE ANTOFAGASTA', 1);
INSERT INTO REGION VALUES(4,'REGIÓN DE ATACAMA', 1);
INSERT INTO REGION VALUES(5,'REGIÓN DE COQUIMBO', 1);
INSERT INTO REGION VALUES(6,'REGIÓN DE VALPARAÍSO', 1);
INSERT INTO REGION VALUES(7,'REGIÓN DEL LIBERTADOR GRAL. BERNARDO O´HIGGINS', 1);
INSERT INTO REGION VALUES(8,'REGIÓN DEL MAULE', 1);
INSERT INTO REGION VALUES(9,'REGIÓN DEL BIOBÍO', 1);
INSERT INTO REGION VALUES(10,'REGIÓN DE LA ARAUCANÍA', 1);
INSERT INTO REGION VALUES(11,'REGIÓN DE LOS RÍOS', 1);
INSERT INTO REGION VALUES(12,'REGIÓN DE LOS LAGOS', 1);
INSERT INTO REGION VALUES(13,'REGIÓN DE AISÉN', 1);
INSERT INTO REGION VALUES(14,'REGIÓN DE MAGALLANES Y DE LA ANTÁRTICA CHILENA', 1);
INSERT INTO REGION VALUES(15,'REGIÓN METROPOLITANA DE SANTIAGO', 1);


--COMUNAS

INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Arica',1);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Camarones',1);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Putre',1);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'General Lagos',1);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Iquique',2);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Alto Hospicio',2);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Pozo Almonte',2);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Camiña',2);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Colchane',2);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Huara',2);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Pica',2);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Antofagasta',3);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Mejillones',3);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Sierra Gorda',3);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Taltal',3);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Calama',3);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Ollagüe',3);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'San Pedro de Atacama',3);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Tocopilla',3);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'María Elena',3);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Copiapó',4);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Caldera',4);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Tierra Amarilla',4);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Chañaral',4);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Diego de Almagro',4);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Vallenar',4);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Alto del Carmen',4);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Freirina',4);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Huasco',4);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'La Serena',5);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Coquimbo',5);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Andacollo',5);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'La Higuera',5);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Paiguano',5);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Vicuña',5);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Illapel',5);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Canela',5);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Los Vilos',5);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Salamanca',5);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Ovalle',5);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Combarbalá',5);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Monte Patria',5);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Punitaqui',5);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Río Hurtado',5);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Valparaíso',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Casablanca',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Concón',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Juan Fernández',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Puchuncaví',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Quintero',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Viña del Mar',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Isla de Pascua',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Los Andes',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Calle Larga',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Rinconada',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'San Esteban',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'La Ligua',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Cabildo',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Papudo',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Petorca',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Zapallar',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Quillota',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Calera',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Hijuelas',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'La Cruz',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Nogales',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'San Antonio',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Algarrobo',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Cartagena',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'El Quisco',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'El Tabo',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Santo Domingo',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'San Felipe',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Catemu',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Llaillay',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Panquehue',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Putaendo',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Santa María',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Limache',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Quilpué',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Villa Alemana',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Olmué',6);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Rancagua',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Codegua',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Coinco',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Coltauco',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Doñihue',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Graneros',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Las Cabras',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Machalí',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Malloa',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Mostazal',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Olivar',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Peumo',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Pichidegua',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Quinta de Tilcoco',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Rengo',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Requínoa',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'San Vicente',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Pichilemu',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'La Estrella',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Litueche',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Marchihue',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Navidad',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Paredones',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'San Fernando',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Chépica',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Chimbarongo',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Lolol',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Nancagua',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Palmilla',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Peralillo',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Placilla',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Pumanque',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Santa Cruz',7);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Talca',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Constitución',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Curepto',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Empedrado',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Maule',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Pelarco',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Pencahue',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Río Claro',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'San Clemente',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'San Rafael',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Cauquenes',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Chanco',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Pelluhue',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Curicó',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Hualañé',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Licantén',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Molina',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Rauco',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Romeral',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Sagrada Familia',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Teno',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Vichuquén',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Linares',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Colbún',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Longaví',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Parral',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Retiro',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'San Javier',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Villa Alegre',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Yerbas Buenas',8);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Concepción',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Coronel',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Chiguayante',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Florida',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Hualqui',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Lota',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Penco',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'San Pedro de la Paz',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Santa Juana',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Talcahuano',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Tomé',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Hualpén',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Lebu',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Arauco',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Cañete',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Contulmo',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Curanilahue',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Los Alamos',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Tirúa',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Los Angeles',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Antuco',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Cabrero',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Laja',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Mulchén',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Nacimiento',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Negrete',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Quilaco',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Quilleco',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'San Rosendo',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Santa Bárbara',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Tucapel',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Yumbel',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Alto Biobío',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Chillán',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Bulnes',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Cobquecura',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Coelemu',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Coihueco',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Chillán Viejo',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'El Carmen',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Ninhue',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Ñiquén',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Pemuco',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Pinto',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Portezuelo',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Quillón',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Quirihue',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Ránquil',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'San Carlos',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'San Fabián',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'San Ignacio',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'San Nicolás',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Treguaco',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Yungay',9);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Temuco',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Carahue',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Cunco',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Curarrehue',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Freire',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Galvarino',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Gorbea',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Lautaro',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Loncoche',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Melipeuco',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Nueva Imperial',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Padre Las Casas',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Perquenco',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Pitrufquén',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Pucón',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Saavedra',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Teodoro Schmidt',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Toltén',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Vilcún',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Villarrica',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Cholchol',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Angol',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Collipulli',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Curacautín',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Ercilla',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Lonquimay',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Los Sauces',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Lumaco',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Purén',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Renaico',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Traiguén',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Victoria',10);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Valdivia',11);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Corral',11);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Lanco',11);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Los Lagos',11);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Máfil',11);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Mariquina',11);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Paillaco',11);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Panguipulli',11);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'La Unión',11);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Futrono',11);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Lago Ranco',11);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Río Bueno',11);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Puerto Montt',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Calbuco',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Cochamó',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Fresia',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Frutillar',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Los Muermos',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Llanquihue',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Maullín',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Puerto Varas',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Castro',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Ancud',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Chonchi',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Curaco de Vélez',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Dalcahue',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Puqueldón',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Queilén',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Quellón',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Quemchi',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Quinchao',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Osorno',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Puerto Octay',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Purranque',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Puyehue',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Río Negro',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'San Juan de la Costa',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'San Pablo',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Chaitén',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Futaleufú',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Hualaihué',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Palena',12);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Coyhaique',13);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Lago Verde',13);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Aisén',13);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Cisnes',13);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Guaitecas',13);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Cochrane',13);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'O´Higgins',13);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Tortel',13);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Chile Chico',13);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Río Ibáñez',13);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Punta Arenas',14);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Laguna Blanca',14);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Río Verde',14);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'San Gregorio',14);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Cabo de Hornos (Ex-Navarino)',14);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Antártica',14);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Porvenir',14);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Primavera',14);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Timaukel',14);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Natales',14);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Torres del Paine',14);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Santiago',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Cerrillos',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Cerro Navia',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Conchalí',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'El Bosque',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Estación Central',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Huechuraba',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Independencia',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'La Cisterna',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'La Florida',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'La Granja',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'La Pintana',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'La Reina',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Las Condes',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Lo Barnechea',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Lo Espejo',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Lo Prado',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Macul',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Maipú',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Ñuñoa',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Pedro Aguirre Cerda',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Peñalolén',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Providencia',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Pudahuel',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Quilicura',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Quinta Normal',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Recoleta',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Renca',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'San Joaquín',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'San Miguel',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'San Ramón',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Vitacura',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Puente Alto',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Pirque',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'San José de Maipo',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Colina',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Lampa',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Tiltil',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'San Bernardo',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Buin',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Calera de Tango',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Paine',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Melipilla',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Alhué',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Curacaví',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'María Pinto',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'San Pedro',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Talagante',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'El Monte',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Isla de Maipo',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Padre Hurtado',15);
INSERT INTO COMUNA VALUES(seq_comuna.nextval,'Peñaflor',15);



--Inserción de datos Tipo PROVEEDOR

INSERT INTO TIPO_PROVEEDOR VALUES(1, 'Bebestibles');
INSERT INTO TIPO_PROVEEDOR VALUES(2, 'Verduras');
INSERT INTO TIPO_PROVEEDOR VALUES(3, 'Dulces');
INSERT INTO TIPO_PROVEEDOR VALUES(4, 'Alimentos');

--Inserción de datos Tipo Plato
INSERT INTO TIPO_PLATO VALUES (1, 'Hot Dog');
INSERT INTO TIPO_PLATO VALUES (2, 'Empanada');
INSERT INTO TIPO_PLATO VALUES (3, 'Lasagna');

--Inserción de datos Categoria

INSERT INTO CATEGORIA VALUES (1, 'Desayuno');
INSERT INTO CATEGORIA VALUES (2, 'Almuerzo');
INSERT INTO CATEGORIA VALUES (3, 'Cena');

--Inserción de datos Familia

INSERT INTO FAMILIA VALUES (1, 'Bebestible');
INSERT INTO FAMILIA VALUES (2, 'Alcohol');
INSERT INTO FAMILIA VALUES (3, 'Salsa');
INSERT INTO FAMILIA VALUES (4, 'Aceite');
INSERT INTO FAMILIA VALUES (5, 'Arroz');
INSERT INTO FAMILIA VALUES (6, 'Pan');

--Inserción de datos Empleado
INSERT INTO EMPLEADO VALUES ('17925714', '9', 'Camilo', 'Alejandro', 'Muñoz', 'Guevara', '1'); 

--CAMBIOS 25-04 
ALTER TABLE CLIENTE ADD ID_GIRO NUMBER(5) NOT NULL;
ALTER TABLE CLIENTE ADD CONSTRAINT FK_CLIENTE_GIRO FOREIGN KEY(ID_GIRO) REFERENCES GIRO(ID_GIRO);

ALTER TABLE BOLETA DROP CONSTRAINT FK_BOLETA_CLIENTE;
ALTER TABLE BOLETA DROP COLUMN RUT_CLIENTE;
ALTER TABLE BOLETA ADD RUT_HUESPED NOT NULL;
ALTER TABLE BOLETA ADD CONSTRAINT FK_BOLETA_HUESPED FOREIGN KEY(RUT_HUESPED) REFERENCES HUESPED(RUT_HUESPED);
ALTER TABLE HUESPED DROP CONSTRAINT FK_HUESPED_HABITACION;
ALTER TABLE HUESPED DROP COLUMN NUMERO_HABITACION;
ALTER TABLE DETALLE_PASAJEROS ADD ID_PENSION NUMBER(5) NOT NULL;
ALTER TABLE DETALLE_PASAJEROS ADD CONSTRAINT FK_DETALLE_PENSION_P FOREIGN KEY(ID_PENSION) REFERENCES PENSION(ID_PENSION);

INSERT INTO GIRO VALUES(1, 'Mayorista');
INSERT INTO GIRO VALUES(2, 'Minorista');
INSERT INTO GIRO VALUES(3, 'Pesca');
INSERT INTO GIRO VALUES(4, 'Bienes Raíces');
INSERT INTO GIRO VALUES(5, 'Construcción');
INSERT INTO GIRO VALUES(6, 'Ganadería');
INSERT INTO GIRO VALUES(7, 'Software');
INSERT INTO GIRO VALUES(8, 'Turismo');

INSERT INTO CATEGORIA_HABITACION VALUES (1, 'Bronce', 4000);
INSERT INTO CATEGORIA_HABITACION VALUES (2, 'Plata', 6000);
INSERT INTO CATEGORIA_HABITACION VALUES (3, 'Oro', 10000);
INSERT INTO CATEGORIA_HABITACION VALUES (4, 'Platino', 15000);
INSERT INTO CATEGORIA_HABITACION VALUES (5, 'Diamante', 20000);

INSERT INTO TIPO_HABITACION VALUES(1, 'Simple', 1, 2000);
INSERT INTO TIPO_HABITACION VALUES(2, 'Doble', 2, 3000);
INSERT INTO TIPO_HABITACION VALUES(3, 'Triple', 3, 4000);